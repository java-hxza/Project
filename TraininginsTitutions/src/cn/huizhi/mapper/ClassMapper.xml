<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.huizhi.mapper.ClassMapper">
	<sql id="classCol">
		classId,
		classNumber,
		className,
		dpId,
		schoolId,
		teacherId,
		classLevel
	</sql>

	<sql id="selectChildrenescClassesCol">
		cc.classId as cc_classId,
		cc.classNumber as cc_classNumber,
		cc.className as cc_className,
		cc.classTypeId as cc_classTypeId,
		cc.headmaster as cc_headmaster ,
		cc.teacherId as cc_teacherId,
		cc.schoolId as cc_schoolId,
		cc.classlevel as cc_classlevel,
		s.schoolId
		as s_schoolId,
		s.schoolName as s_schoolName,
		dp.dpTypeName as
		dp_dpTypeName,
		dp.dpId as dp_dpId,
		ct.classTypeName ct_classTypeName
	</sql>

	<select id="selectChildrenescClasses"
		resultMap="selectChildrenescClassesMap"
		parameterType="java.lang.String">
		select
		<include refid="selectChildrenescClassesCol" />
		from class cc
		join school s on cc.schoolId = s.schoolId
		join
		departmentofpediatrics dp on cc.dpId = dp.dpId
		join classtype ct on
		ct.classTypeId = cc.classTypeId
		<where>
			<if test="schoolId !=null and schoolId !=''">
				cc.schoolId =#{schoolId}
			</if>
		</where>
	</select>

	<resultMap id="selectChildrenescClassesMap" type="Class">
		<id column="cc_classId" property="classId" />
		<result column="cc_classNumber" property="classNumber" />
		<result column="cc_className" property="className" />
		<result column="cc_classTypeId" property="classTypeId" />
		<result column="cc_schoolId" property="schoolId" />
		<result column="cc_headmaster" property="headmaster" />
		<result column="cc_teacherId" property="teacherId" />
		<result column="cc_classlevel" property="classLevel" />
		<collection property="school" javaType="School">
			<id column="s_schoolId" property="schoolId"
				javaType="java.lang.Integer" />
			<result column="s_schoolName" property="schoolName"
				javaType="java.lang.String" />
		</collection>
		<collection property="departmentOfPediatrics"
			javaType="DepartmentOfPediatrics">
			<id column="dp_dpId" property="dpId" javaType="java.lang.Integer" />
			<result column="dp_dpTypeName" property="dpTypeName"
				javaType="java.lang.String" />
		</collection>
		<collection property="classType2" javaType="ClassType">
			<result column="ct_classTypeName" property="classTypeName" />
		</collection>
	</resultMap>

	<insert id="insertChildrenescClass" parameterType="Class">
		insert into
		traininginstitutions.class ( classNumber, className, dpId,
		schoolId,classTypeId, headmaster, teacherId, classLevel)
		values (
		#{classNumber},#{className}, #{dpId}, #{schoolId},
		#{classTypeId},
		#{headmaster}, #{teacherId}, #{classLevel} )
	</insert>




	<select id="selectClassListByTeacherId"
		resultMap="selectChildrenescClassesMap"
		parameterType="java.lang.Integer">
		select
		<include refid="selectChildrenescClassesCol" />
		from traininginstitutions.class cc
		join school s on cc.schoolId =
		s.schoolId
		join departmentofpediatrics dp on cc.dpId = dp.dpId
		join
		classtype ct on ct.classTypeId = cc.classTypeId
		<where>
			<if test="teacherId !=null and teacherId !=''">
				cc.teacherId =#{teacherId}
			</if>
		</where>
	</select>


	<select id="selectClass" resultMap="selectClasses"
		parameterType="java.lang.Integer">
		SELECT
		c.classId cd,c.classNumber,c.className,c.schoolId
		cs,c.classTypeId,c.headmaster,c.teacherId,c.classLevel,d.dpId,d.dpTypeName,s.schoolName
		ssi
		FROM class c
		JOIN departmentofpediatrics d ON c.dpId=d.dpId
		JOIN
		school s ON c.schoolId=s.schoolId
		JOIN classtype ct ON
		c.classTypeId=ct.classTypeId
		WHERE c.schoolId=#{0} AND
		ct.classTypeTime=#{1}
		ORDER BY cd
	</select>

	<resultMap id="selectClasses" type="Class">
		<id column="cd" property="classId" />
		<result column="c.classNumber" property="classNumber" />
		<result column="c.className" property="className" />
		<result column="c.classTypeId" property="classTypeId" />
		<result column="cs" property="schoolId" />
		<result column="c.headmaster" property="headmaster" />
		<result column="c.teacherId" property="teacherId" />
		<result column="c.classLevel" property="classLevel" />
		<collection property="departmentOfPediatrics"
			javaType="DepartmentOfPediatrics">
			<id column="d.dpId" property="dpId" javaType="java.lang.Integer" />
			<result column="d.dpTypeName" property="dpTypeName" />
		</collection>
		<collection property="school" javaType="School">
			<result column="ssi" property="schoolName" />
		</collection>
	</resultMap>

	<select id="selectClass2" resultMap="selectClass2s">
		SELECT
		c.classId
		cd,c.classNumber,c.className,c.schoolId
		cs,c.classTypeId,c.headmaster,c.teacherId,c.classLevel,s.schoolName
		ssi,d.dpTypeName
		FROM class c
		JOIN school s ON c.schoolId=s.schoolId
		JOIN departmentofpediatrics d ON c.dpId=d.dpId
		JOIN classtype ct ON
		c.classTypeId=ct.classTypeId
		WHERE c.schoolId=#{0} AND
		ct.classTypeTime=#{1}
		ORDER BY cd
	</select>

	<resultMap id="selectClass2s" type="Class">
		<id column="cd" property="classId" />
		<result column="c.classNumber" property="classNumber" />
		<result column="c.className" property="className" />
		<result column="c.classTypeId" property="classTypeId" />
		<result column="cs" property="schoolId" />
		<result column="c.headmaster" property="headmaster" />
		<result column="c.teacherId" property="teacherId" />
		<result column="c.classLevel" property="classLevel" />
		<collection property="school" javaType="School">
			<result column="ssi" property="schoolName" />
		</collection>
		<collection property="departmentOfPediatrics"
			javaType="DepartmentOfPediatrics">
			<result column="d.dpTypeName" property="dpTypeName" />
		</collection>
	</resultMap>

	<select id="selectClassAll" resultMap="selectClassesAll"
		parameterType="java.lang.Integer">
		SELECT
		c.classId cd,c.classNumber,c.className,c.schoolId
		cs,c.classTypeId,c.headmaster,c.teacherId,c.classLevel,s.schoolName
		ssi,d.dpTypeName
		FROM class c
		JOIN school s ON c.schoolId=s.schoolId
		JOIN departmentofpediatrics d ON c.dpId=d.dpId
		WHERE
		c.schoolId=#{0}
		ORDER BY cd
	</select>

	<resultMap id="selectClassesAll" type="Class">
		<id column="cd" property="classId" />
		<result column="c.classNumber" property="classNumber" />
		<result column="c.className" property="className" />
		<result column="c.classTypeId" property="classTypeId" />
		<result column="cs" property="schoolId" />
		<result column="c.headmaster" property="headmaster" />
		<result column="c.teacherId" property="teacherId" />
		<result column="c.classLevel" property="classLevel" />
		<collection property="school" javaType="School">
			<result column="ssi" property="schoolName" />
		</collection>
		<collection property="departmentOfPediatrics"
			javaType="DepartmentOfPediatrics">
			<result column="d.dpTypeName" property="dpTypeName" />
		</collection>
	</resultMap>

	<select id="selectVIPClass" resultMap="selectVIPClasses">
		SELECT
		c.classId
		cd,c.classNumber,c.className,c.schoolId
		cs,c.classTypeId,c.headmaster,c.teacherId,c.classLevel,d.dpId,d.dpTypeName,s.schoolName
		ssi
		FROM class c
		JOIN departmentofpediatrics d ON c.dpId=d.dpId
		JOIN
		school s ON c.schoolId=s.schoolId
		JOIN classtype ct on c.classTypeId =
		ct.classTypeId
		WHERE ct.classTypeId=#{0} AND c.schoolId=#{1}
	</select>

	<resultMap id="selectVIPClasses" type="Class">
		<id column="cd" property="classId" />
		<result column="c.classNumber" property="classNumber" />
		<result column="c.className" property="className" />
		<result column="c.classTypeId" property="classTypeId" />
		<result column="cs" property="schoolId" />
		<result column="c.headmaster" property="headmaster" />
		<result column="c.teacherId" property="teacherId" />
		<result column="c.classLevel" property="classLevel" />
		<collection property="departmentOfPediatrics"
			javaType="DepartmentOfPediatrics">
			<id column="d.dpId" property="dpId" javaType="java.lang.Integer" />
			<result column="d.dpTypeName" property="dpTypeName" />
		</collection>
		<collection property="school" javaType="School">
			<result column="ssi" property="schoolName" />
		</collection>
	</resultMap>

	<resultMap type="Class" id="classByClassIdMap">
		<id column="c.classId" property="classId" />
		<result column="c.classNumber" property="classNumber" />
		<result column="c.className" property="className" />
		<result column="c.dpId" property="dpId" />
		<result column="c.dpId" property="dpId" />
		<result column="c.headmaster" property="headmaster" />
		<result column="c.schoolId" property="schoolId" />
		<result column="c.teacherId" property="teacherId" />
		<result column="c.classLevel" property="classLevel" />
		<result column="c_classTypeId" property="classTypeId" />
		<collection property="departmentOfPediatrics"
			javaType="DepartmentOfPediatrics">
			<result column="d.dpTypeName" property="dpTypeName" />
			<result column="d.dpMoney" property="dpMoney" />
			<result column="d.dpMoneyVip" property="dpMoneyVip" />
		</collection>
	</resultMap>

	<sql id="classByClassIdCol">
		c.classId,
		c.classNumber,
		c.className,
		c.dpId,
		c.headmaster,
		c.schoolId,
		c.teacherId,
		c.classLevel,
		c.classTypeId c_classTypeId,
		d.dpTypeName
	</sql>
	<select id="selectClassByClassId"
		parameterType="java.lang.Integer" resultMap="classByClassIdMap">
		select
		<include refid="classByClassIdCol" />
		from traininginstitutions.class c,departmentofpediatrics d
		<where>
			<if test="classId!=null and classId!=''">
				classId=#{classId}
			</if>
		</where>
	</select>
	
	<delete id="delClass">
		delete from class 
		where classId = #{classId}
	</delete>
	<!-- 清空表数据 -->
	<update id="delClassTable">
		truncate traininginstitutions.class
	</update>

	<select id="selectMyClass" parameterType="java.lang.Integer"
		resultType="Class">
		SELECT * FROM class WHERE schoolId=#{0}
	</select>

	<select id="selectUnopenedClass"
		parameterType="java.lang.Integer" resultType="Class">
		SELECT
		s.classId,s.className
		FROM
		studenttool s
		WHERE s.studentId = #{0}
	</select>

	<select id="selectNotUnopenedClass"
		statementType="STATEMENT" resultMap="selectNotUnopenedClasses">
		SELECT
		c.classId cd,c.classNumber,c.className,c.schoolId
		cs,c.classTypeId,c.headmaster,c.teacherId,c.classLevel,d.dpId,d.dpTypeName,s.schoolName
		ssi
		FROM class c
		JOIN departmentofpediatrics d ON c.dpId=d.dpId
		JOIN
		school s ON c.schoolId=s.schoolId
		JOIN classtype ct ON
		c.classTypeId=ct.classTypeId
		WHERE c.classId NOT IN(${classId}) AND c.schoolId=${schoolId}
	</select>
	
	<resultMap id="selectNotUnopenedClasses" type="Class">
		<id column="cd" property="classId" />
		<result column="c.classNumber" property="classNumber" />
		<result column="c.className" property="className" />
		<result column="c.classTypeId" property="classTypeId" />
		<result column="cs" property="schoolId" />
		<result column="c.headmaster" property="headmaster" />
		<result column="c.teacherId" property="teacherId" />
		<result column="c.classLevel" property="classLevel" />
		<collection property="departmentOfPediatrics"
			javaType="DepartmentOfPediatrics">
			<id column="d.dpId" property="dpId" javaType="java.lang.Integer" />
			<result column="d.dpTypeName" property="dpTypeName" />
		</collection>
		<collection property="school" javaType="School">
			<result column="ssi" property="schoolName" />
		</collection>
	</resultMap>

</mapper>
