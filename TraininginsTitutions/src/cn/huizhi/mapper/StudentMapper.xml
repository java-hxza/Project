<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.huizhi.mapper.StudentMapper">

	<sql id="studentCol">
		t.studentId,
		t.studentName,
		t.studentSex,
		t.studentIDCard,
		t.studentBirth,
		t.school,
		t.parentName,
		t.telephone,
		t.familyAddress,
		t.registrationChannels,
		t.registrationConsultant,
		t.startTime,
		t.endTime,
		t.theSurrogate,
		t.remarks,
		t.feeCategory,
		t.studentHour,
		t.integral,
		t.usedIntegral
	</sql>

	<select id="selectHigh" resultType="Student">
		SELECT
		<include refid="studentCol" />
		FROM student t
		JOIN highesclassstudnet hc ON t.studentId=hc.studentId
		JOIN class c ON hc.classId=c.classId
		WHERE c.schoolId=#{0} AND
		t.feeCategory = 2
		<if test="map.startTime !=null and map.startTime!=''">
			and date(t.startTime) between #{map.startTime} and
			#{map.endTime}
		</if>

	</select>

	<select id="selectChildren" resultMap="selectChildrens">
		SELECT t.studentId si,
		t.studentName sn,
		t.studentSex ss,
		t.studentIDCard sd,
		t.studentBirth sb,
		t.school sc,
		t.parentName sp,
		t.telephone st,
		t.familyAddress sf,
		t.registrationChannels sr,
		t.registrationConsultant src,
		t.startTime stt,
		t.endTime se,
		t.theSurrogate sts,
		t.remarks srk,
		t.feeCategory sfc,
		cl.classId cd
		FROM
		student t
		JOIN childrenesclassstudnet cl ON
		t.studentId=cl.studentId
		JOIN class c ON cl.classId=c.classId
		WHERE
		c.schoolId=#{0} AND
		t.feeCategory = 1
		<if test="map.startTime !=null and map.startTime!=''">
			and date(t.startTime) between #{map.startTime} and
			#{map.endTime}
		</if>
	</select>

	<resultMap type="Student" id="selectChildrens">
		<id column="si" property="studentId" />
		<result column="sn" property="studentName" />
		<result column="ss" property="studentSex" />
		<result column="sd" property="studentIDCard" />
		<result column="sb" property="studentBirth" />
		<result column="sc" property="school" />
		<result column="sp" property="parentName" />
		<result column="st" property="telephone" />
		<result column="sf" property="familyAddress" />
		<result column="sr" property="registrationChannels" />
		<result column="src" property="registrationConsultant" />
		<result column="stt" property="startTime" />
		<result column="se" property="endTime" />
		<result column="sts" property="theSurrogate" />
		<result column="srk" property="remarks" />
		<result column="sfc" property="feeCategory" />
		<collection property="childrenesClassStudnet"
			javaType="ChildrenesClassStudnet">
			<result column="cd" property="classId" />
		</collection>
	</resultMap>


	<select id="selectYiKao" resultType="Student">
		SELECT
		<include refid="studentCol" />
		FROM student t
		JOIN highesclassstudnet hc ON t.studentId=hc.studentId
		JOIN class c ON hc.classId=c.classId
		WHERE c.schoolId=#{0} AND
		t.feeCategory = 3
		<if test="map.startTime !=null and map.startTime!=''">
			and date(t.startTime) between #{map.startTime} and
			#{map.endTime}
		</if>
	</select>


	<select id="selectChildrenInfoByStudnet" parameterType="Student"
		resultType="Student">
		select
		<include refid="studentCol" />
		from student t
		<where>
			<if test="studentId !=null and studentId!=''">
				studentId =#{studentId}
			</if>
			<if test="studentSex !=null and studentSex''">
				and studentName =#{studentSex}
			</if>
			<if test="studentSex !=null and studentSex''">
				and studentSex =#{studentSex}
			</if>
			<if test="studentIDCard !=null and studentIDCard''">
				and studentIDCard =#{studentIDCard}
			</if>
			<if test="studentBirth !=null and studentBirth''">
				and studentBirth =#{studentBirth}
			</if>
			<if test="school !=null and school''">
				and school =#{school}
			</if>
			<if test="parentName !=null and parentName''">
				and parentName =#{parentName}
			</if>
			<if test="telephone !=null and telephone''">
				and telephone =#{telephone}
			</if>
			<if test="familyAddress !=null and familyAddress''">
				and familyAddress =#{familyAddress}
			</if>
			<if test="registrationChannels !=null and registrationChannels''">
				and registrationChannels =#{registrationChannels}
			</if>
			<if test="registrationChannels !=null and registrationChannels''">
				and registrationChannels =#{registrationChannels}
			</if>
			<if
				test="registrationConsultant !=null and registrationConsultant''">
				and registrationConsultant =#{registrationConsultant}
			</if>
			<if test="startTime !=null and startTime''">
				and startTime =#{startTime}
			</if>
			<if test="endTime !=null and endTime''">
				and endTime =#{endTime}
			</if>
			<if test="theSurrogate !=null and theSurrogate''">
				and theSurrogate =#{theSurrogate}
			</if>
			<if test="remarks !=null and remarks''">
				and remarks =#{remarks}
			</if>
			<if test="feeCategory !=null and feeCategory''">
				and feeCategory =#{feeCategory}
			</if>

		</where>
	</select>


	<insert id="insertStudnetInfo" parameterType="Student">
		insert into traininginstitutions.student
		(studentName,studentSex,studentIDCard,
		studentBirth, school,
		parentName, telephone, familyAddress,
		registrationChannels,registrationConsultant,
		startTime, endTime,
		theSurrogate, remarks, feeCategory,integral )
		values (#{studentName},
		#{studentSex}, #{studentIDCard}, #{studentBirth}, #{school},
		#{parentName}, #{telephone}, #{familyAddress},
		#{registrationChannels},
		#{registrationConsultant}, #{startTime},
		#{endTime}, #{theSurrogate}, #{remarks}, #{feeCategory},#{integral})
		<!--order属性是取数据生成之前(before)or生成之后(after)  -->
		<selectKey keyProperty="studentId" resultType="java.lang.Integer" order="AFTER">
    		<!--  当前事务最后一个生成的主键id-->
    		select last_insert_id()
    	</selectKey>
		

	</insert>

	<update id="updateStudentOrderHour">
		UPDATE traininginstitutions.student
		SET studentHour =
		studentHour + #{0},integral = integral + #{2} WHERE studentId = #{1} ;
	</update>

	<select id="selectStudentClass" resultType="Student"
		statementType="STATEMENT">
		SELECT t.*
		FROM
		student t
		JOIN ${table} c ON
		t.studentId=c.studentId
		JOIN
		class s ON c.classId=s.classId
		WHERE
		c.classId=${classId}
		ORDER BY t.studentId
	</select>
	<select id="selectStudentUsedIntegral"
		resultMap="selectStudentUsedIntegrals" statementType="STATEMENT">
		SELECT
		t.studentName,t.integral,t.school,t.studentId tsi,t.usedIntegral
		,ca.className FROM student t
		JOIN ${table} c ON t.studentId=c.studentId
		JOIN class ca ON c.classId=ca.classId WHERE ca.schoolId=${schoolId}
	</select>

	<resultMap type="Student" id="selectStudentUsedIntegrals">
		<id column="tsi" property="studentId" />
		<result column="t.studentName" property="studentName" />
		<result column="t.integral" property="integral" />
		<result column="t.school" property="school" />
		<result column="t.usedIntegral" property="usedIntegral" />
		<collection property="classes" javaType="Class">
			<result column="ca.className" property="className" />
		</collection>
	</resultMap>

	<select id="selectStudentId" resultType="Student">
		SELECT s.studentId
		FROM
		student s
		WHERE s.studentName LIKE
		CONCAT('%',#{0},'%') AND s.parentName
		LIKE
		CONCAT('%',#{1},'%') AND
		s.studentSex=#{2}
	</select>

	 
		


	<!-- 根据主键查询学生 -->
	<select id="findStudentById" resultType="Student"
		parameterType="java.lang.Integer">
		select
		<include refid="studentCol" />
		from student t
		<where>
			<if test="studentId!=null and studentId!=''">
				t.studentId = #{studentId}
			</if>
		</where>
	</select>
	<!-- 修改学生 -->
	<update id="updateStudent" parameterType="Student">
		update traininginstitutions.student
		set
		studentId = #{studentId} ,
		studentName = #{studentName} ,
		studentSex = #{studentSex},
		studentIDCard = #{studentIDCard} ,
		studentBirth = #{studentBirth},
		school = #{school} ,
		parentName = #{parentName} ,
		telephone =
		#{telephone} ,
		familyAddress = #{familyAddress},
		registrationChannels =
		#{registrationChannels} ,
		registrationConsultant =
		#{registrationConsultant} ,
		startTime = #{startTime} ,
		endTime =
		#{endTime} ,
		theSurrogate = #{theSurrogate} ,
		remarks = #{remarks} ,
		feeCategory = #{feeCategory} ,
		studentHour = #{studentHour} ,
		integral =
		#{integral}
		<where>
			<if test="studentId!=null and studentId!=''">
				studentId = #{studentId}
			</if>
		</where>
	</update>
	
	<!--批量修改学生课时  -->
	<update id="updateStuHour" parameterType="Student">
		<foreach collection="list" item="s" index="index" open="" close="" separator=";"></foreach>
			update traininginstitutions.student 
			<set>
				<if test="s.studentHour !=null and s.studentHour!=''">
					studentHour = studentHour-#{s.studentHour}  
				</if>
			</set>
			
			<where>
				studentId = #{studentId} 
			</where>
	</update>
</mapper>